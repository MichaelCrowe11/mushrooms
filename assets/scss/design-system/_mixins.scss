// =============================================================================
// ADVANCED MIXINS - MODERN CSS PATTERNS
// Best-in-class design techniques and utility mixins
// =============================================================================

// RESPONSIVE DESIGN SYSTEM
// -----------------------------------------------------------------------------

// Modern breakpoint mixin with mobile-first approach
@mixin breakpoint($size) {
  @if $size == xs {
    @media (min-width: 0) { @content; }
  } @else if $size == sm {
    @media (min-width: 576px) { @content; }
  } @else if $size == md {
    @media (min-width: 768px) { @content; }
  } @else if $size == lg {
    @media (min-width: 992px) { @content; }
  } @else if $size == xl {
    @media (min-width: 1200px) { @content; }
  } @else if $size == xxl {
    @media (min-width: 1400px) { @content; }
  } @else if $size == xxxl {
    @media (min-width: 1600px) { @content; }
  }
}

// Container queries for component-based responsive design
@mixin container-query($size) {
  @container (min-width: #{$size}) {
    @content;
  }
}

// GLASS MORPHISM SYSTEM
// -----------------------------------------------------------------------------

// Advanced glass morphism with customization
@mixin glass-morphism(
  $opacity: 0.95,
  $blur: 20px,
  $border-opacity: 0.25,
  $shadow-opacity: 0.1
) {
  background: rgba(255, 255, 255, $opacity);
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
  border: 1px solid rgba(255, 255, 255, $border-opacity);
  box-shadow: 0 8px 32px rgba(0, 0, 0, $shadow-opacity);
  
  [data-theme="dark"] & {
    background: rgba(10, 10, 10, $opacity);
    border-color: rgba(255, 255, 255, $border-opacity * 0.4);
    box-shadow: 0 8px 32px rgba(0, 0, 0, $shadow-opacity * 3);
  }
}

// Frosted glass effect
@mixin frosted-glass($intensity: medium) {
  @if $intensity == light {
    @include glass-morphism(0.8, 10px, 0.2, 0.05);
  } @else if $intensity == medium {
    @include glass-morphism(0.9, 20px, 0.25, 0.1);
  } @else if $intensity == heavy {
    @include glass-morphism(0.95, 30px, 0.3, 0.15);
  }
}

// MODERN ANIMATIONS & INTERACTIONS
// -----------------------------------------------------------------------------

// Micro-interactions for delightful UX
@mixin hover-lift($distance: 4px, $scale: 1.02, $duration: var(--duration-fast)) {
  transition: all $duration var(--easing-ease-out);
  
  &:hover:not(:disabled) {
    transform: translateY(-#{$distance}) scale(#{$scale});
    box-shadow: var(--elevation-4);
  }
  
  &:active {
    transform: translateY(-#{$distance * 0.5}) scale(#{$scale * 0.98});
    transition-duration: calc(#{$duration} * 0.5);
  }
}

// Smooth focus states with accessibility
@mixin focus-visible($color: var(--interactive-primary), $width: 2px, $offset: 2px) {
  outline: none;
  
  &:focus-visible {
    outline: #{$width} solid #{$color};
    outline-offset: #{$offset};
    box-shadow: 0 0 0 calc(#{$width} + #{$offset}) rgba(16, 163, 127, 0.1);
  }
}

// Skeleton loading animation
@mixin skeleton-loading($base-color: var(--neutral-200), $shine-color: var(--neutral-100)) {
  background: linear-gradient(
    90deg,
    $base-color 25%,
    $shine-color 50%,
    $base-color 75%
  );
  background-size: 200% 100%;
  animation: skeleton-shimmer 2s infinite;
  
  @keyframes skeleton-shimmer {
    0% { background-position: -200% 0; }
    100% { background-position: 200% 0; }
  }
}

// LAYOUT SYSTEMS
// -----------------------------------------------------------------------------

// CSS Grid auto-fit with minimum width
@mixin auto-grid($min-width: 250px, $gap: var(--space-4)) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(#{$min-width}, 1fr));
  gap: #{$gap};
}

// Flexbox utilities with gap fallback
@mixin flex-center($gap: 0) {
  display: flex;
  align-items: center;
  justify-content: center;
  @if $gap != 0 {
    gap: #{$gap};
  }
}

@mixin flex-between($gap: 0) {
  display: flex;
  align-items: center;
  justify-content: space-between;
  @if $gap != 0 {
    gap: #{$gap};
  }
}

// Sticky positioning with fallback
@mixin sticky($top: 0, $z-index: var(--z-sticky)) {
  position: -webkit-sticky;
  position: sticky;
  top: #{$top};
  z-index: #{$z-index};
}

// TYPOGRAPHY SYSTEM
// -----------------------------------------------------------------------------

// Fluid typography with clamp
@mixin fluid-text($min-size, $max-size, $min-width: 320px, $max-width: 1200px) {
  font-size: clamp(
    #{$min-size},
    #{$min-size} + (#{strip-unit($max-size - $min-size)}) * ((100vw - #{$min-width}) / #{strip-unit($max-width - $min-width)}),
    #{$max-size}
  );
}

// Text truncation with ellipsis
@mixin text-truncate($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: #{$lines};
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// Visually hidden for accessibility
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// COMPONENT PATTERNS
// -----------------------------------------------------------------------------

// Modern button base styles
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-2);
  padding: 0 var(--button-padding-x);
  border: none;
  border-radius: var(--button-radius);
  font-family: inherit;
  font-weight: var(--font-weight-medium);
  text-decoration: none;
  text-align: center;
  white-space: nowrap;
  user-select: none;
  cursor: pointer;
  transition: all var(--duration-fast) var(--easing-ease-out);
  
  @include focus-visible;
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }
}

// Card component base
@mixin card-base {
  background: var(--surface-elevated);
  border: 1px solid var(--border-subtle);
  border-radius: var(--card-radius);
  padding: var(--card-padding);
  box-shadow: var(--card-shadow);
  transition: all var(--duration-normal) var(--easing-ease-out);
}

// Input field base styles
@mixin input-base {
  width: 100%;
  padding: var(--space-3) var(--space-4);
  border: 1px solid var(--border-default);
  border-radius: var(--radius-md);
  background: var(--surface-primary);
  color: var(--text-primary);
  font-family: inherit;
  font-size: var(--font-size-base);
  line-height: var(--line-height-normal);
  transition: all var(--duration-fast) var(--easing-ease-out);
  
  @include focus-visible;
  
  &::placeholder {
    color: var(--text-tertiary);
  }
  
  &:hover:not(:disabled) {
    border-color: var(--border-strong);
  }
  
  &:focus {
    border-color: var(--interactive-primary);
    box-shadow: 0 0 0 3px rgba(16, 163, 127, 0.1);
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

// UTILITY FUNCTIONS
// -----------------------------------------------------------------------------

// Strip unit from number
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}

// Convert px to rem
@function rem($px, $base: 16px) {
  @return ($px / $base) * 1rem;
}

// Get color with opacity
@function color-alpha($color, $alpha) {
  @return rgba($color, $alpha);
}

// SCROLL BEHAVIOR
// -----------------------------------------------------------------------------

// Smooth scrolling with reduced motion support
@mixin smooth-scroll {
  scroll-behavior: smooth;
  
  @media (prefers-reduced-motion: reduce) {
    scroll-behavior: auto;
  }
}

// Custom scrollbar styling
@mixin custom-scrollbar($width: 8px, $track-color: var(--neutral-100), $thumb-color: var(--neutral-400)) {
  &::-webkit-scrollbar {
    width: #{$width};
    height: #{$width};
  }
  
  &::-webkit-scrollbar-track {
    background: #{$track-color};
    border-radius: calc(#{$width} / 2);
  }
  
  &::-webkit-scrollbar-thumb {
    background: #{$thumb-color};
    border-radius: calc(#{$width} / 2);
    
    &:hover {
      background: var(--neutral-500);
    }
  }
  
  // Firefox scrollbar
  scrollbar-width: thin;
  scrollbar-color: #{$thumb-color} #{$track-color};
}

// ACCESSIBILITY MIXINS
// -----------------------------------------------------------------------------

// High contrast mode support
@mixin high-contrast {
  @media (prefers-contrast: high) {
    @content;
  }
}

// Reduced motion support
@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

// Print styles optimization
@mixin print-only {
  @media print {
    @content;
  }
}

@mixin screen-only {
  @media screen {
    @content;
  }
}
